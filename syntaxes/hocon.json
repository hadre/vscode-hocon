{
    "name": "HOCON",
    "scopeName": "source.hocon",
    "fileTypes": [
        "conf",
        "properties"
    ],
    "patterns": [
        {
            "include": "#duration-long"
        },
        {
            "include": "#bytesize-long"
        },
        {
            "include": "#duration-short"
        },
        {
            "include": "#bytesize-short"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#constant"
        },
        {
            "include": "#string"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#number"
        },
        {
            "include": "#ustring"
        }
    ],
    "repository": {
        "bytesize-long": {
            "comment": "handles byte-based units (long version)",
            "match": "\\b\\d+((kilo|mega|giga|tera|peta|exa|zetta|yotta|kibi|mebi|gibi|tebi|pebi|exbi|zebo|yobi)?byte[s]?)\\b",
            "name": "constant.numeric.byte.long.hocon"
        },
        "bytesize-short": {
            "comment": "handles byte-based units (short version)",
            "match": "\\b\\d+(([kMGTPEZY]B)|([KMGTPEZY]i[B]?)|([kmgtpezybB]))\\b",
            "name": "constant.numeric.byte.short.hocon"
        },
        "comments": {
            "patterns": [
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.hocon"
                        }
                    },
                    "match": "(\/\/).*$\\n?",
                    "name": "comment.line.double-slash.hocon"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.hocon"
                        }
                    },
                    "match": "(#).*$\\n?",
                    "name": "comment.line.pound.hocon"
                }
            ]
        },
        "constant": {
            "match": "[^-]\\b(?:true|false|null|on|off|yes|no)\\b[^-]",
            "name": "constant.language.hocon"
        },
        "duration-long": {
            "comment": "handles durations (long version)",
            "match": "\\b\\d+(day|hour|minute|millisecond|microsecond|nanosecond|second)[s]?\\b",
            "name": "constant.numeric.duration.long.hocon"
        },
        "duration-short": {
            "comment": "handles durations (short version)",
            "match": "\\b(\\d+)(d|h|ns|ms|us|s)\\b",
            "name": "constant.numeric.duration.short.hocon"
        },
        "keywords": {
            "patterns": [
                {
                    "match": "\\b(include|url|file|classpath)\\b",
                    "name": "keyword.other.source.hocon"
                }
            ]
        },
        "number": {
            "comment": "handles integer and decimal numbers",
            "match": "(\\b\\-?\\d+(\\.\\d+)?([eE]\\d+)?\\b)",
            "name": "constant.numeric.zzz.simple.numbers.hocon"
        },
        "string": {
            "begin": "\"",
            "end": "\"",
            "name": "string.quoted.double.hocon",
            "patterns": [
                {
                    "match": "(\\\\(?:[\"\\\\\/bfnrt]|u[0-9a-fA-F]{4}))",
                    "name": "constant.character.escape.hocon"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.unrecognized-string-escape.hocon"
                }
            ]
        },
        "ustring": {
            "comment": "unquoted strings",
            "match": "([^=\\{\\}\\[\\]\\s][^0-9=\\{\\}\\[\\]][^=\\{\\}\\[\\]\\s]*)$",
            "name": "string.other.zzz.unquoted.hocon"
        },
        "variables": {
            "comment": "variable references",
            "begin": "\\$\\{",
            "end": "\\}",
            "patterns": [
              {
                "include": "#string"
              }
            ],
            "name": "storage.type.source.hocon"
        }
    }
}